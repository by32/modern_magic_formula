name: Update Magic Formula Screening

on:
  schedule:
    # Run every Monday at 6:00 UTC (after markets close)
    - cron: '0 6 * * 1'
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: write

jobs:
  update-screening:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        pip install uv
        uv add pandas requests yfinance streamlit
        
    - name: Run ETL process
      env:
        ALPHA_VANTAGE_KEY: ${{ secrets.ALPHA_VANTAGE_KEY }}
        FMP_KEY: ${{ secrets.FMP_KEY }}
        FINNHUB_KEY: ${{ secrets.FINNHUB_KEY }}
        IEX_TOKEN: ${{ secrets.IEX_TOKEN }}
      run: |
        # Try to run ETL with real API data, fallback to sample data if it fails
        if [ -z "$ALPHA_VANTAGE_KEY" ]; then
          echo "⚠️ No ALPHA_VANTAGE_KEY found. Generating sample data for demo..."
          python3 generate_sample_data.py
        else
          echo "🔑 Running Russell 1000 ETL with Alpha Vantage API key..."
          echo "🔑 API Key (first 8 chars): ${ALPHA_VANTAGE_KEY:0:8}..."
          
          # Try to run the Russell 1000 ETL
          if uv run python -m etl.main_russell; then
            echo "✅ Russell 1000 ETL completed successfully with live data"
          else
            echo "❌ Russell 1000 ETL failed, falling back to sample data..."
            python3 generate_sample_data.py
          fi
        fi
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add data files
        git add data/
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "📈 No changes to screening data"
        else
          # Get current date for commit message
          CURRENT_DATE=$(date +'%Y-%m-%d')
          
          # Create commit with screening update
          git commit -m "📊 Update Russell 1000 Magic Formula screening - $CURRENT_DATE

          🔄 Automated weekly Russell 1000 screening update
          📅 Run date: $CURRENT_DATE
          🤖 Generated by GitHub Actions
          
          🎯 Updated screening includes:
          - Full Russell 1000 universe (~1000 stocks)
          - Latest earnings yield calculations
          - Return on capital metrics  
          - Magic Formula rankings with sector analysis
          - Alpha Vantage + Yahoo Finance data sources"
          
          # Push changes
          git push
          
          echo "✅ Successfully updated screening data"
        fi
        
    - name: Create summary
      run: |
        echo "## 📊 Russell 1000 Magic Formula Screening Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "data/metadata.json" ]; then
          echo "### 📈 Latest Russell 1000 Data" >> $GITHUB_STEP_SUMMARY
          python3 -c "import json; meta=json.load(open('data/metadata.json')); print(f'- **Run Date**: {meta.get(\"run_date\", \"Unknown\")[:19]}'); print(f'- **Stocks Processed**: {meta.get(\"total_stocks\", \"Unknown\")}/{meta.get(\"russell_1000_stocks\", \"Unknown\")} Russell 1000 stocks'); print(f'- **Processing Time**: {meta.get(\"processing_time_seconds\", 0):.1f} seconds'); print(f'- **Data Sources**: {meta.get(\"data_sources\", [\"Unknown\"])}')" >> $GITHUB_STEP_SUMMARY
        
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🏆 Top 5 Magic Formula Picks" >> $GITHUB_STEP_SUMMARY
          python3 -c "import pandas as pd; df=pd.read_csv('data/latest_screening.csv'); [print(f'{int(row[\"magic_formula_rank\"])}. **{row[\"ticker\"]}** - {row[\"company_name\"]}\\n   - EY: {row[\"earnings_yield\"]*100:.2f}% | ROC: {row[\"roc\"]*100:.2f}% | Sector: {row.get(\"sector\", \"Unknown\")}\\n') for _, row in df.head(5).iterrows()]" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ No Russell 1000 screening data available" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🔗 **View the live dashboard**: [Streamlit App](https://your-app.streamlit.app)" >> $GITHUB_STEP_SUMMARY